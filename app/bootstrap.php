<?php
declare(strict_types=1);
session_start();
$config = require __DIR__ . '/../config/config.php';
function cfg(){ global $config; return $config; }
function send_security_headers(){ header("X-Content-Type-Options: nosniff"); header("X-Frame-Options: SAMEORIGIN"); header("Referrer-Policy: no-referrer-when-downgrade"); header("X-XSS-Protection: 0"); header("Content-Security-Policy: default-src 'self' 'unsafe-inline' 'unsafe-eval' data: https://cdn.jsdelivr.net https://cdn.jsdelivr.net/npm https://cdnjs.cloudflare.com; img-src 'self' data: https://*; connect-src 'self';"); ini_set('session.cookie_httponly','1'); ini_set('session.cookie_secure', isset($_SERVER['HTTPS']) ? '1':'0'); ini_set('session.use_strict_mode','1'); } send_security_headers();
function csrf_token(){ if (empty($_SESSION['csrf'])) $_SESSION['csrf']=bin2hex(random_bytes(32)); return $_SESSION['csrf']; }
function csrf_field(){ $t = htmlspecialchars(csrf_token()); echo '<input type="hidden" name="_csrf" value="'.$t.'">'; }
function verify_csrf(){ if ($_SERVER['REQUEST_METHOD']==='POST'){ $sent = $_POST['_csrf'] ?? ''; if (!hash_equals($_SESSION['csrf'] ?? '', $sent)){ http_response_code(400); exit('CSRF validation failed'); } } } verify_csrf();
function db(): PDO { static $pdo=null; if ($pdo) return $pdo; $c=cfg(); $pdo=new PDO("mysql:host={$c['DB_HOST']};dbname={$c['DB_NAME']};charset=utf8mb4",$c['DB_USER'],$c['DB_PASS'],[PDO::ATTR_ERRMODE=>PDO::ERRMODE_EXCEPTION,PDO::ATTR_DEFAULT_FETCH_MODE=>PDO::FETCH_ASSOC]); return $pdo; }
function row($stmt,$args=[]){ $stmt->execute($args); return $stmt->fetch(); } function qall($stmt,$args=[]){ $stmt->execute($args); return $stmt->fetchAll(); }
function is_logged_in(){ return !empty($_SESSION['uid']); } function current_user(){ if(!is_logged_in()) return ['role'=>'guest','username'=>'guest']; return row(db()->prepare("SELECT * FROM users WHERE id=?"), [$_SESSION['uid']]); }
function require_login(){ if(!is_logged_in()){ header('Location: /login.php'); exit; } } function is_role($r){ return is_logged_in() && current_user()['role']===$r; } function ensure_role($arr){ if(!in_array(current_user()['role'],$arr)){ http_response_code(403); exit('Forbidden'); } }
function login($u,$p){ $r=row(db()->prepare("SELECT * FROM users WHERE username=?"),[$u]); if($r && password_verify($p,$r['password'])){ $_SESSION['uid']=$r['id']; return true; } return false; } function logout(){ $_SESSION=[]; session_destroy(); }
function set_setting($k,$v){ db()->prepare("REPLACE INTO settings(`key`,`value`) VALUES (?,?)")->execute([$k,$v]); } function get_setting($k,$d=null){ $r=row(db()->prepare("SELECT value FROM settings WHERE `key`=?"),[$k]); return $r['value'] ?? $d; }
function upsert_response($aid,$iid,$self=null,$super=null,$evid=null,$comment=null){ $pdo=db(); $r=row($pdo->prepare("SELECT id FROM responses WHERE assessment_id=? AND item_id=?"),[$aid,$iid]); if($r){ $pdo->prepare("UPDATE responses SET self_score=COALESCE(?,self_score), supervisor_score=COALESCE(?,supervisor_score), evidence_url=COALESCE(?,evidence_url), comment=COALESCE(?,comment) WHERE id=?")->execute([$self,$super,$evid,$comment,$r['id']]); } else { $pdo->prepare("INSERT INTO responses (assessment_id,item_id,self_score,supervisor_score,evidence_url,comment) VALUES (?,?,?,?,?,?)")->execute([$aid,$iid,$self,$super,$evid,$comment]); } }
function compute_scores($assessment_id){ $pdo=db(); $areas=qall($pdo->prepare("SELECT ca.id,ca.name FROM competency_areas ca JOIN items i ON i.area_id=ca.id JOIN responses r ON r.item_id=i.id WHERE r.assessment_id=? GROUP BY ca.id,ca.name"),[$assessment_id]); $overall_sum=0;$area_count=0; foreach($areas as $a){ $rows=qall($pdo->prepare("SELECT r.supervisor_score,r.self_score,i.weight_pct FROM responses r JOIN items i ON i.id=r.item_id WHERE r.assessment_id=? AND i.area_id=?"),[$assessment_id,$a['id']]); $num=0;$den=0; foreach($rows as $r){ $score=$r['supervisor_score'] ?? $r['self_score'] ?? 0; $w=(float)$r['weight_pct']; $num+=$score*$w; $den+=$w; } $area_score=$den>0?round(($num/$den)*20,2):0; $pdo->prepare("REPLACE INTO score_rollups (assessment_id,level,ref_id,score) VALUES (?,?,?,?)")->execute([$assessment_id,'area',$a['id'],$area_score]); $overall_sum+=$area_score; $area_count++; } $overall=$area_count>0?round($overall_sum/$area_count,2):0; $pdo->prepare("REPLACE INTO score_rollups (assessment_id,level,ref_id,score) VALUES (?,?,?,?)")->execute([$assessment_id,'overall',0,$overall]); $ass=row($pdo->prepare("SELECT a.*,u.role,a.questionnaire_id FROM assessments a JOIN users u ON u.id=a.user_id WHERE a.id=?"),[$assessment_id]); foreach($areas as $a){ $req=row($pdo->prepare("SELECT required_level FROM required_levels WHERE questionnaire_id=? AND area_id=? AND role_name=?"),[$ass['questionnaire_id'],$a['id'],$ass['role']])['required_level'] ?? 3; $achieved=round(($pdo->query("SELECT score FROM score_rollups WHERE assessment_id={$assessment_id} AND level='area' AND ref_id={$a['id']}")->fetch()['score'] ?? 0)/20,2); $gap=max(0,$req-$achieved); $pdo->prepare("REPLACE INTO score_rollups (assessment_id,level,ref_id,score) VALUES (?,?,?,?)")->execute([$assessment_id,'area_gap',$a['id'],$gap]); } }
function current_lang(){ if(!empty($_GET['lang'])){ $_SESSION['lang']=preg_replace('/[^a-z]/','',$_GET['lang']); } return $_SESSION['lang'] ?? 'en'; }
function t($k,$fb=null){ static $dict=null,$lng=null; $lang=current_lang(); if($dict===null || $lng!==$lang){ $p=__DIR__ . '/../i18n/' . $lang . '.json'; if(!file_exists($p)) $p=__DIR__ . '/../i18n/en.json'; $dict=json_decode(file_get_contents($p),true) ?: []; $lng=$lang; } return $dict[$k] ?? ($fb ?? $k); }
